    public List<List<Integer>> combinationSum(int[] nums, int target) {
        List<List<Integer>> list = new ArrayList<>();
        Arrays.sort(nums);
        backtrack(list, new ArrayList<>(), nums, target, 0);
        return list;
    }

    private void backtrack(List<List<Integer>> list, ArrayList<Integer> tempList, int[] nums, int remain, int start) {
        if(remain<0)return;
        else if (remain == 0)list.add(new ArrayList<>(tempList));
        else{
            for(int i=start;i<nums.length;i++){
                tempList.add(nums[i]);
                //不用i+1 因为可以重复使用数字
                backtrack(list,tempList,nums,remain-nums[i],i);
                tempList.remove(tempList.size()-1);
            }
        }
    }
