public  class 搜索旋转排序数组 {
    public int search(int[] nums, int target) {
        //边界条件判断
        int n = nums.length;
        if (nums == null || nums.length == -1) return -1;
        int l = 0;
        int r = nums.length - 1;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            //如果数组中点等于目标值直接返回
            if (nums[mid] == target) return mid;
            //如果左半边是有序的
            if (nums[mid] >= nums[0]) {
                if (nums[mid] > target && target >= nums[0]) {
                    //缩小左边界
                    r = mid - 1;
                } else {
                    //缩小右边界
                    l = mid + 1;
                }
                //否则右半边是有序的
            } else {
                //目标值要大于左边界 并且小于右边界
                if (nums[mid] < target && target <= nums[n - 1]) {
                    //缩小左边界
                    l = mid + 1;
                } else {
                    r = mid - 1;
                }
            }
        }
        return -1;
    }
}
